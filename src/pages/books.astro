---
import Page from "../layouts/page.astro";

const frontmatter = {
  title: "Books",
};
---

<script is:inline>
  document.addEventListener("alpine:init", () => {
    Alpine.data("books", () => ({
      async init() {
        // Initialize search query
        this.query = this.page.searchParams;
        // Initialize default list
        if (!this.query.has("list")) {
          this.query.set("list", "read");
        }
        // Fetch books from origin
        this.books = await fetch(`https://api.zakhary.dev/books/${this.query.get('list') ?? 'read'}`)
          .then(r => r.json())
      },
      page: new URL(window.location),
      // Address query
      query: null,
      // Booklist data
      books: [],
      // Reload with a new query
      reload(list) {
        this.query.set("list", list);
        window.location.replace(this.page);
      },
    }));
  });
</script>

<Page {...frontmatter}>
  <p>
    I'm trying to read more! For a while I barely read any fiction and I've
    spent the past few years catching up. You can likely infer my interests
    based on the non-fiction books on these lists.
  </p>
  <hr/>
  <section x-data="books">
    <header>
      <fieldset>
        <button id="read" @click="reload($el.id)" :aria-current="query.get('list') == $el.id">Timeline</button>
        <button id="live" @click="reload($el.id)" :aria-current="query.get('list') == $el.id">Reading</button>
        <button id="next" @click="reload($el.id)" :aria-current="query.get('list') == $el.id">Backlog</button>
      </fieldset>
    </header>
    <template x-if="query.get('list') == 'read'">
      <template x-for="[year, list] in Object.entries(Object.groupBy(books,
        ({ date }) => new Date(date).getFullYear()
      )).sort().reverse()">
        <details open>
          <summary>
            <h2 x-text="year"></h2>
            <span x-text="`(${list.length} books)`"></span>
          </summary>
          <ul>
            <template x-for="item in list" :key="item.book.id">
              <li class="book" x-data="{ book: item.book }">
                <div class="cover">
                  <img
                    :src="book.image?.url"
                    :alt='`Cover artwork for "${book.title}"`'
                    :title="book.title"
                  />
                </div>
                <span>
                  <b x-text="book.title"></b> by <em x-text="
                    book.contributions
                      .map(c => c.author?.name)
                      .filter(Boolean)
                      .join(', ')
                  "></em>
                </span>
              </li>
            </template>
          </ul>
        </details>
      </template>
    </template>
    <template x-if="query.get('list') != 'read'">
      <ul>
        <template x-for="item in books" :key="item.book.id">
          <li class="book" x-data="{ book: item.book }">
            <div class="cover">
              <img
                :src="book.image?.url"
                :alt='`Cover artwork for "${book.title}"`'
                :title="book.title"
                :style="`background: ${book.image?.color}`"
              />
            </div>
            <span>
              <b x-text="book.title"></b> by <em x-text="
                book.contributions
                  .map(c => c.author?.name)
                  .filter(Boolean)
                  .join(', ')
              "></em>
            </span>
          </li>
        </template>
      </ul>
    </template>
  </section>
</Page>

<style>
  header {
    padding-block-start: 1em;

    fieldset {
      display: flex;

      flex-wrap: wrap;
      gap: .5em;
      justify-content: center;

      border: none;
      padding: 0;

      button {
        font: 1.2em var(--serif);

        padding: 2px 12px;
        margin: 0;
      }

      button[aria-current] {
        --backgd: color-mix(in srgb, var(--darker) 70%, var(--accent));
        --border: var(--accent);
        --shadow: oklch(from var(--accent) l c h / .4);
      }
    }
  }

  details {
    summary {
      display: flex;

      align-items: center;
      justify-content: space-between;

      > * {
        margin: 0;
      }

      + * {
        margin-block: 1em .5em;
      }
    }
  }

  ul {
    display: grid;

    grid-template-columns:
      repeat(auto-fill, [col-start] 12ch [col-end]);
    gap: 1em;
    justify-content: center;

    inline-size: 100%;

    margin: 0;
    padding: 0;

    list-style: none;

    li.book {
      display: flex;
      flex-direction: column;

      .cover {
        display: flex;

        align-items: end;
        justify-content: center;

        block-size: 18ch;
        margin-block: .5em;

        img {
          display: block;

          block-size: auto;
          inline-size: auto;

          max-block-size: 100%;
          max-inline-size: 100%;

          object-fit: cover;
        }
      }
    }
  }
</style>
