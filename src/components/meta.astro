---
import dayjs from "dayjs";

const data = Astro.props;
---

<aside class="meta">
  {/* created date */}
  <svg class="icon" viewBox="0 0 16 16" width="16" height="16">
    <use fill="currentColor" href="#icon:date"></use>
  </svg>
  <span class="item" title={data.created}>
    {dayjs(data.created).format("DD MMM YYYY")}
  </span>
  {/* updated date */ data.updated && (
    <svg class="icon" viewBox="0 0 16 16" width="16" height="16">
      <use fill="currentColor" href="#icon:edit"></use>
    </svg>
    <span class="item" title={data.updated}>
      {dayjs(data.updated).format("DD MMM YYYY")}
    </span>
  )}
  {/* reading time */ data.readingTime && (
    <svg class="icon" viewBox="0 0 16 16" width="16" height="16">
      <use fill="currentColor" href="#icon:time"></use>
    </svg>
    <span class="item">
      {data.readingTime.text}
    </span>
  )}
  {/* tags */ data.tags && (
    <svg class="icon" viewBox="0 0 16 16" width="16" height="16">
      <use fill="currentColor" href="#icon:tags"></use>
    </svg>
    <span class="item list">
      {data.tags.map(tag => (
        <a href=`/tags#${tag}`>#{tag}</a>
      ))}
    </span>
  )}
</aside>

<style>
  .meta {
    display: inline-flex;
    flex-flow: row wrap;

    margin-block-start: .5em;

    font-size: .75em;

    .icon {
      margin: 0 4px 0 0;
      line-height: inherit;
    }

    .item:not(:last-child)::after {
      content: "â€¢";
      margin: 0 .5em;
    }

    .list {
      display: inline-flex;
      gap: 4px;

      a {
        color: inherit;
        text-decoration: none;
      }
    }
  }
</style>
